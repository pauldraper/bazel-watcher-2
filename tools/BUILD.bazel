load("@better_rules_javascript//prettier:rules.bzl", "configure_prettier")
load("@rules_file//black:rules.bzl", "black")
load("@rules_file//buildifier:rules.bzl", "buildifier")
load("@rules_file//generate:rules.bzl", "format", "generate_test", "multi_generate")
load("@better_rules_javascript//npm:rules.bzl", "yarn_resolve")

buildifier(
    name = "buildifier",
)

generate_test(
    name = "format_test",
    generate = ":format",
    visibility = ["//visibility:public"],
)

format(
    name = "buildifier_format",
    srcs = ["@rivet_bazel_util_files//:buildifier_files"],
    formatter = ":buildifier",
    strip_prefix = "/files",
)

black(
    name = "black",
)

format(
    name = "black_format",
    srcs = ["@rivet_bazel_util_files//:black_files"],
    formatter = ":black",
    strip_prefix = "/files",
)

configure_prettier(
    name = "prettier",
    config = "prettierrc.yml",
    config_dep = "//:prettier_config",
    dep = "@npm//prettier:lib",
)

format(
    name = "prettier_format",
    srcs = ["@rivet_bazel_util_files//:prettier_files"],
    formatter = ":prettier",
    strip_prefix = "/files",
)

multi_generate(
    name = "format",
    visibility = ["//visibility:public"],
    deps = [
        ":black_format",
        ":buildifier_format",
        ":prettier_format",
    ],
)

yarn_resolve(
    name = "resolve_npm",
    output = "npm_data.bzl",
)

sh_binary(
    name = "gen_bazelrc",
    srcs = ["gen-bazelrc.sh"],
    data = ["deleted.bazelrc.tpl"],
)
